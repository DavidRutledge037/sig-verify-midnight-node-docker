volumes:
  cardano-data: {}
  db-sync-data: {}
  postgres-data: {}
  ogmios-data: {}
  kupo-data: {}
  node-ipc:
    driver_opts:
      type: none
      device: ${PWD}/node-ipc
      o: bind

services:
  cardano-node:
    image: ghcr.io/intersectmbo/cardano-node:10.1.4
    restart: unless-stopped
    container_name: cardano-node
    ports:
      - "3001:3001"
    environment:
      - NETWORK=preview
      - CARDANO_NODE_SOCKET_PATH=/ipc/node.socket
    volumes:
      - node-ipc:/ipc
      - cardano-data:/data
      - ./cardano/config/preview:/config
    healthcheck:
      test: ["CMD", "test", "-S", "/ipc/node.socket"]
      interval: 10s
      timeout: 5s
      retries: 12
      start_period: 30s

  postgres:
    image: postgres:15.3
    container_name: db-sync-postgres
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=cexplorer
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  db-sync:
    image: ghcr.io/intersectmbo/cardano-db-sync:13.6.0.4
    container_name: db-sync
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      cardano-node:
        condition: service_healthy
    environment:
      - NETWORK=preview
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=cexplorer
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - CARDANO_NODE_SOCKET_PATH=/node-ipc/node.socket
      - CARDANO_SOCKET_PATH=/node-ipc/node.socket
      - DBSYNC_CONFIG=/config/db-sync/config.json
      - DBSYNC_SOCKET_PATH=/node-ipc/node.socket
      - DBSYNC_STATE_DIR=/var/lib/cexplorer
      - DBSYNC_SCHEMA_DIR=/nix/store/npsidz34y67jp7sc07b2iw7s2n3fp9lj-schema
    volumes:
      - node-ipc:/node-ipc
      - db-sync-data:/var/lib
      - ./cardano/config/preview:/config
    deploy:
      resources:
        limits:
          memory: 4G
        reservations:
          memory: 2G

  ogmios:
    image: cardanosolutions/ogmios:v6.5.0
    container_name: ogmios
    restart: unless-stopped
    depends_on:
      cardano-node:
        condition: service_healthy
    ports:
      - "1337:1337"
    volumes:
      - node-ipc:/ipc
      - ogmios-data:/data
      - ./cardano/config/preview:/config
    command:
      - --node-socket
      - /ipc/node.socket
      - --node-config
      - /config/cardano-node/config.json
      - --host
      - 0.0.0.0

  kupo:
    image: cardanosolutions/kupo:v2.9.0
    container_name: kupo
    depends_on:
      cardano-node:
        condition: service_healthy
    command:
      - --node-socket
      - /ipc/node.socket
      - --node-config
      - /config/cardano-node/config.json
      - --host
      - 0.0.0.0
      - --workdir
      - /db
      - --match
      - "*"
      - --since
      - origin
      - --prune-utxo
    ports:
      - "1442:1442"
    volumes:
      - kupo-data:/db
      - node-ipc:/ipc
      - ./cardano/config/preview:/config
